/* Sakura.css v1.4.1
 * ================
 * Minimal css theme.
 * Project: https://github.com/oxalorg/sakura/
 */

/* Developed by Higama-ya based on Sakura.css */

/* ********************************************************************************
 * Define colors
 */

:root {
  --sakura-text-primary-color: #4a4a4a;
  --sakura-text-secondary-color: #1d7484;
  --sakura-text-secondary-sub-color: #144f5a;
  --sakura-text-focus-color: #982c61;
  --sakura-background-color: #f9f9f9;
  --sakura-background-sub-color: #f1f1f1;

  @media screen and (prefers-color-scheme: dark) {
    --sakura-text-primary-color: #c8c8c8;
    --sakura-text-secondary-color: #ffffff;
    --sakura-text-secondary-sub-color: #f1f1f1;
    --sakura-text-focus-color: #f8d1d1;
    --sakura-background-color: #222222;
    --sakura-background-sub-color: #4a4a4a;
  }
}

/* ********************************************************************************
 * Define fonts
 */

:root {
  --sakura-font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Helvetica Neue", Arial, sans-serif;
  --sakura-font-family-mono: Courier, monospace;
}

/* ********************************************************************************
 * Reset & Define base styles
 */

* {
  margin: 0;
  padding: 0;
  outline-offset: 0.2em;
  text-underline-offset: 0.2em;
  color: inherit;
  font-size: inherit;
  font-weight: inherit;
}

:focus {
  outline-color: var(--sakura-text-primary-color);
}

:any-link {
  color: inherit;
}

/* ********************************************************************************
 * Define styles for each
 */

html {
  font-size: 62.5%;
  font-weight: 400;
  font-family: var(--sakura-font-family);
}

body {
  font-size: 1.8em;
  line-height: 1.618;
  max-width: 38em;
  margin: auto;
  color: var(--sakura-text-primary-color);
  background-color: var(--sakura-background-color);
  padding: 13px;

  @media (max-width: 684px) {
    font-size: 1.53em;
  }

  @media (max-width: 382px) {
    font-size: 1.35em;
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1.1;
  font-weight: 700;
  margin-block-start: 3rem;
  margin-block-end: 1.5rem;
  overflow-wrap: break-word;
  word-wrap: break-word;
  -ms-word-break: break-all;
  word-break: break-word;

  &:first-child {
    margin-block-start: 0;
  }

  &:last-child {
    margin-block-end: 0;
  }
}

h1 {
  font-size: 3em;
}

h2 {
  font-size: 2.1em;
}

h3 {
  font-size: 1.6em;
}

h4 {
  font-size: 1.3em;
}

h5 {
  font-size: 1.1em;
}

h6 {
  font-size: 1em;
}

p {
  &:where(:not(:last-child)) {
    margin-block-end: 2.5rem;
  }
}

small,
sub,
sup {
  font-size: 75%;
}

hr {
  border-color: var(--sakura-text-secondary-color);
}

a {
  text-decoration: none;
  color: var(--sakura-text-secondary-color);

  &:visited {
    color: var(--sakura-text-secondary-sub-color);
  }

  &:hover {
    color: var(--sakura-text-focus-color);
    border-bottom: 2px solid var(--sakura-text-primary-color);
  }
}

ul {
  padding-left: 1.4em;

  &:where(:not(:last-child)) {
    margin-block-end: 2.5rem;
  }
}

li {
  margin-block-end: 0.4em;
}

blockquote {
  padding-left: 1em;
  padding-top: 0.8em;
  padding-bottom: 0.8em;
  padding-right: 0.8em;
  border-left: 5px solid var(--sakura-text-secondary-color);
  background-color: var(--sakura-background-sub-color);

  &:where(:not(:last-child)) {
    margin-block-end: 2.5rem;
  }
}

img,
video {
  height: auto;
  max-width: 100%;

  &:where(:not(:last-child)) {
    margin-block-end: 2.5rem;
  }
}

pre {
  background-color: var(--sakura-background-sub-color);
  display: block;
  padding: 1em;
  overflow-x: auto;
  font-size: 0.9em;

  &:where(:not(:last-child)) {
    margin-block-end: 2.5rem;
  }
}

code,
kbd,
samp,
var {
  font-size: 0.9em;
  font-family: var(--sakura-font-family-mono);
  padding-inline: 0.5em;
  background-color: var(--sakura-background-sub-color);
  white-space: pre-wrap;
}

pre > :where(code) {
  background-color: transparent;
  white-space: pre;
  font-size: 1em;
}

table {
  text-align: justify;
  width: 100%;
  border-collapse: collapse;
}

td,
th {
  padding: 0.5em;
  border-bottom: 1px solid var(--sakura-background-sub-color);
}

input,
textarea {
  border: 1px solid var(--sakura-text-primary-color);

  &:focus {
    border: 1px solid var(--sakura-text-secondary-color);
  }
}

textarea {
  width: 100%;
}

.button,
button,
input[type="submit"],
input[type="reset"],
input[type="button"] {
  display: inline-block;
  padding: 5px 10px;
  text-align: center;
  text-decoration: none;
  white-space: nowrap;
  background-color: var(--sakura-text-secondary-color);
  color: var(--sakura-background-color);
  border-radius: 1px;
  border: 1px solid var(--sakura-text-secondary-color);
  cursor: pointer;
  box-sizing: border-box;

  &[disabled] {
    cursor: default;
    opacity: 0.5;
  }

  &:focus:enabled,
  &:hover:enabled {
    background-color: var(--sakura-text-focus-color);
    border-color: var(--sakura-text-focus-color);
    color: var(--sakura-background-color);
    outline: 0;
  }
}

input,
textarea,
select {
  color: var(--sakura-text-primary-color);
  padding: 6px 10px;
  background-color: var(--sakura-background-sub-color);
  border: 1px solid var(--sakura-background-sub-color);
  border-radius: 4px;
  box-shadow: none;
  box-sizing: border-box;

  &:where(:not(:last-child)) {
    margin-block-end: 10px;
  }

  &:focus {
    border: 1px solid var(--sakura-text-secondary-color);
    outline: 0;
  }
}

input[type="checkbox"]:focus {
  outline: 1px dotted var(--sakura-text-secondary-color);
}

label,
legend,
fieldset {
  display: block;
  font-weight: 500;

  &:where(:not(:last-child)) {
    margin-block-end: 0.5rem;
  }
}

dialog {
  display: block;
  position: fixed;
  top: 50lvh;
  transform: translateY(-50%);
  box-sizing: border-box;
  max-width: 90%;
  width: 30em;
  margin-inline: auto;
  padding: 1em;
  border: 3px solid var(--sakura-text-secondary-color);
  background-color: var(--sakura-background-sub-color);
  color: var(--sakura-text-primary-color);
}
